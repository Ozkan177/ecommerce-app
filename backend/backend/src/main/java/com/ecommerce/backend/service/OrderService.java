package com.ecommerce.backend.service;

import com.ecommerce.backend.model.Order;
import com.ecommerce.backend.model.OrderItem;
import com.ecommerce.backend.repository.OrderItemRepository;
import com.ecommerce.backend.repository.OrderRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.time.LocalDateTime;
import java.util.List;

@Service
public class OrderService {

    @Autowired
    private OrderRepository orderRepository;

    @Autowired
    private OrderItemRepository orderItemRepository;

    // ğŸ”µ SipariÅŸ oluÅŸtur
    public Order createOrder(Order order) {
        // SipariÅŸ zamanÄ± ayarlanÄ±yor
        order.setPurchaseDate(LocalDateTime.now());
        order.setStatus("PREPARING"); // BaÅŸlangÄ±Ã§ta "HazÄ±rlanÄ±yor" olarak baÅŸlasÄ±n
        
        // Order iÃ§indeki tÃ¼m OrderItem'larÄ± kaydet
        for (OrderItem item : order.getItems()) {
            item.setOrder(order); // Her item'a baÄŸlÄ± sipariÅŸ atanÄ±yor
        }

        // Ã–nce sipariÅŸ kaydediliyor (Order + Items cascade ile birlikte kaydedilecek)
        return orderRepository.save(order);
    }

    // ğŸ”µ TÃ¼m sipariÅŸleri listele
    public List<Order> getAllOrders() {
        return orderRepository.findAll();
    }

    // ğŸ”µ KullanÄ±cÄ±ya Ã¶zel sipariÅŸleri getir
    public List<Order> getOrdersByUserId(Long userId) {
        return orderRepository.findByUserId(userId);
    }
}
